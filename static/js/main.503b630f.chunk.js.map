{"version":3,"sources":["Components/Modal/Modal.module.css","Components/TodoItem/TodoItem.module.css","Components/TodoForm/TodoForm.module.css","Components/TodosList/TodoList.module.css","Components/TodoItem/TodoItem.js","Components/Modal/Modal.js","Components/TodosList/TodosList.js","Components/TodoForm/TodoForm.js","App.js","index.js"],"names":["module","exports","TodoItem","changeTodo","deleteTodo","todo","id","index","completed","setCompleted","className","style","contain","type","value","checked","complited","onChange","e","newComplite","i","length","target","text","btn__contain","onClick","change","delete","modalRoot","document","getElementById","Modal","context","setArrTodo","currentId","arrTodo","toggleModal","useState","setChangeTodo","createPortal","overlay","modal","close","width","height","fill","xmlns","d","onSubmit","preventDefault","trim","split","alert","date","Date","newArray","toLocaleString","textarea","createTodo","placeholder","btn","TodosList","showModal","setShowModal","setContext","setCurrentId","todoId","targetTodo","find","updateTodo","filter","updateTodoComplited","list","map","item","TodoForm","setTodo","newTodo","setNewTodo","reset","uuidv4","form","App","JSON","parse","window","localStorage","getItem","useEffect","setItem","stringify","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.503b630f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__-sWAp\",\"modal\":\"Modal_modal__2CB_a\",\"close\":\"Modal_close__eqYjX\",\"textarea\":\"Modal_textarea__14ToJ\",\"text\":\"Modal_text__3ckbF\",\"btn\":\"Modal_btn__3T0NK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"TodoItem_text__-nidB\",\"contain\":\"TodoItem_contain__2Xvyr\",\"btn__contain\":\"TodoItem_btn__contain__3ge1t\",\"btn\":\"TodoItem_btn__20dBG\",\"change\":\"TodoItem_change__2Rgy- TodoItem_btn__20dBG\",\"delete\":\"TodoItem_delete__30bn4 TodoItem_btn__20dBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"TodoForm_textarea__sHLkJ\",\"text\":\"TodoForm_text__SUrJH\",\"btn\":\"TodoForm_btn__114nW\",\"form\":\"TodoForm_form__3zSHw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TodoList_list__1Sf4o\",\"item\":\"TodoList_item__33X96\",\"checked\":\"TodoList_checked__3nYyY\"};","import style from \"./TodoItem.module.css\";\r\n\r\nexport default function TodoItem({\r\n  changeTodo,\r\n  deleteTodo,\r\n  todo,\r\n  id,\r\n  index,\r\n  completed,\r\n  setCompleted,\r\n}) {\r\n  const handleChecked = (e) => {\r\n    const newComplite = [...completed];\r\n    for (let i = 0; i < newComplite.length; i += 1) {\r\n      if (newComplite[i].id === id) {\r\n        newComplite[index].complited = e.target.checked;\r\n        setCompleted(newComplite);\r\n        break;\r\n      }\r\n    }\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={style.contain}>\r\n        <input\r\n          type=\"checkbox\"\r\n          value={id}\r\n          checked={completed[index].complited}\r\n          onChange={handleChecked}\r\n        />\r\n        <p className={style.text}>{todo}</p>\r\n      </div>\r\n      <div className={style.btn__contain}>\r\n        <button\r\n          onClick={() => {\r\n            return changeTodo(index);\r\n          }}\r\n          className={style.change}\r\n        >\r\n          Change\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            return deleteTodo(index);\r\n          }}\r\n          className={style.delete}\r\n\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { createPortal } from \"react-dom\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport style from \"./Modal.module.css\";\r\nconst modalRoot = document.getElementById(\"modal-root\");\r\n\r\nexport default function Modal({\r\n  context,\r\n  setArrTodo,\r\n  currentId,\r\n  arrTodo,\r\n  toggleModal,\r\n}) {\r\n  const [changeTodo, setChangeTodo] = useState(context);\r\n  const handleChangeTodo = (e) => {\r\n    e.preventDefault();\r\n    if (changeTodo.trim() === \"\") {\r\n      alert(\"введите текст\");\r\n      return;\r\n    }\r\n    for (let i = 0; i < arrTodo.length; i += 1) {\r\n      if (arrTodo[i].split(\"M: \")[1] === changeTodo.trim()) {\r\n        alert(\"такая TODO уже существует\");\r\n        return;\r\n      }\r\n    }\r\n    const date = new Date();\r\n    const newArray = [...arrTodo];\r\n    newArray[currentId] = `${date.toLocaleString(\"en-US\")}: ` + changeTodo;\r\n    setArrTodo(newArray);\r\n    toggleModal();\r\n  };\r\n  const createNewTodo = (e) => {\r\n    const createTodo = e.target.value;\r\n    setChangeTodo(createTodo);\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={style.overlay}>\r\n      <div className={style.modal}>\r\n        <>\r\n          <button onClick={() => { toggleModal() }}  className={style.close}>\r\n            <svg\r\n            width=\"40\"\r\n            height=\"40\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M29.667 12.88 27.787 11l-7.454 7.453L12.88 11 11 12.88l7.453 7.453L11 27.787l1.88 1.88 7.453-7.454 7.454 7.454 1.88-1.88-7.454-7.454 7.454-7.453Z\"\r\n              fill=\"#212121\"\r\n            />\r\n          </svg>\r\n          </button>\r\n          <form onSubmit={handleChangeTodo}>\r\n            <p  className={style.text}>Change todo</p>            \r\n            <textarea\r\n          className={style.textarea}\r\n              \r\n              onChange={createNewTodo}\r\n              value={changeTodo}\r\n              type=\"text\"\r\n              placeholder=\"input TODO\"\r\n            ></textarea>\r\n            <button className={style.btn}\r\n            >\r\n              Change Todo\r\n            </button>\r\n          </form>\r\n        </>\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport TodoItem from \"../TodoItem\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport style from \"./TodoList.module.css\";\r\n\r\nexport default function TodosList({\r\n  arrTodo,\r\n  setArrTodo,\r\n  completed,\r\n  setCompleted,\r\n}) {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [context, setContext] = useState(\"\");\r\n  const [currentId, setCurrentId] = useState(\"\");\r\n  const changeTodo = (todoId) => {\r\n    const targetTodo = arrTodo.find((todo, i) => todoId === i).split(\"M: \")[1];\r\n    setContext(targetTodo);\r\n    setCurrentId(todoId);\r\n    toggleModal();\r\n  };\r\n  const toggleModal = () => {\r\n    return setShowModal(!showModal);\r\n  };\r\n  const deleteTodo = (todoId) => {\r\n    const updateTodo = arrTodo.filter((todo, i) => {\r\n      return i !== todoId;\r\n    });\r\n    setArrTodo(updateTodo);\r\n   \r\n    const updateTodoComplited = completed.filter((todo, i) => {\r\n      return i !== todoId\r\n    })\r\n    setCompleted(updateTodoComplited)\r\n  };\r\n  return (\r\n    <>\r\n      <ul className={style.list}>\r\n        {arrTodo.length !== 0 &&\r\n          arrTodo.map((todo, i) => {\r\n            return (\r\n              <li\r\n                key={completed[i].id}\r\n                className={\r\n                  (completed[i].complited && style.checked) || style.item\r\n                }\r\n              >\r\n                <TodoItem\r\n                  todo={todo}\r\n                  id={completed[i].id}\r\n                  index={i}\r\n                  changeTodo={changeTodo}\r\n                  deleteTodo={deleteTodo}\r\n                  completed={completed}\r\n                  setCompleted={setCompleted}\r\n                />{\" \"}\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n      {showModal && (\r\n        <Modal\r\n          context={context}\r\n          currentId={currentId}\r\n          setArrTodo={setArrTodo}\r\n          arrTodo={arrTodo}\r\n          toggleModal={toggleModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react/cjs/react.development\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport style from \"./TodoForm.module.css\"\r\n\r\nexport default function TodoForm({ setTodo, arrTodo,setCompleted, completed }) {\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n  const createNewTodo = (e) => {\r\n    const createTodo = e.target.value;\r\n    setNewTodo(createTodo);\r\n  };\r\n  const handleCreateTodo = (e) => {\r\n    e.preventDefault();\r\n    if (newTodo.trim() === \"\") {\r\n      alert(\"пожалуйста введите текст\");\r\n      reset();\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < arrTodo.length; i += 1) {\r\n      if (arrTodo[i].split(\"M: \")[1] === newTodo.trim()) {\r\n        alert(\"такая TODO уже существует\");\r\n        reset();\r\n        return;\r\n      }\r\n    }\r\n\r\n    const date = new Date();\r\n    setTodo(`${date.toLocaleString(\"en-US\")}: ` + newTodo);\r\n    setCompleted([...completed, {completed: false, id: uuidv4()}])\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setNewTodo(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleCreateTodo} className={style.form}>\r\n        <p className={style.text}>Create todo:</p>        \r\n        <textarea\r\n          className={style.textarea}\r\n          onChange={createNewTodo}\r\n          value={newTodo}\r\n          type=\"text\"\r\n          placeholder=\"input TODO\"\r\n        ></textarea>\r\n        <button className={style.btn}>Create Todo</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport TodosList from \"./Components/TodosList\";\r\nimport TodoForm from \"./Components/TodoForm\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  const [completed, setCompleted] = useState(() => {\r\n    return (\r\n      JSON.parse(window.localStorage.getItem(\"completed\")) ?? [\r\n        { id: \"firstTodo\", completed: false },\r\n      ]\r\n    );\r\n  });\r\n  const [todo, setTodo] = useState(\"\");\r\n  const [arrTodo, setArrTodo] = useState(() => {\r\n    return (\r\n      JSON.parse(window.localStorage.getItem(\"todos\")) ?? [\r\n        \"create you first ToDO\",\r\n      ]\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"todos\", JSON.stringify(arrTodo));\r\n  }, [arrTodo]);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"completed\", JSON.stringify(completed));\r\n  }, [completed]);\r\n\r\n  useEffect(() => {\r\n    if (todo === \"\") return;\r\n    setArrTodo([...arrTodo, todo]);\r\n  }, [todo]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">ToDo App</h1>\r\n        <TodoForm\r\n          setTodo={setTodo}\r\n          arrTodo={arrTodo}\r\n          completed={completed}\r\n          setCompleted={setCompleted}\r\n        />\r\n        <TodosList\r\n          arrTodo={arrTodo}\r\n          setArrTodo={setArrTodo}\r\n          completed={completed}\r\n          setCompleted={setCompleted}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}